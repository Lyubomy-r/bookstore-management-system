plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.protobuf' version "0.9.4"
}

group = 'com.manage.bookstore'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'net.devh:grpc-server-spring-boot-starter:2.15.0.RELEASE'
	implementation 'net.devh:grpc-client-spring-boot-starter:2.15.0.RELEASE'
	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'io.grpc', name: 'grpc-testing', version: '1.60.2'
	testImplementation 'org.testcontainers:testcontainers:1.16.0'
	testImplementation 'org.testcontainers:junit-jupiter:1.16.0'
	testImplementation 'org.testcontainers:postgresql:1.16.0'
}
protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.14.0"
	}
	clean {
		delete generatedFilesBaseDir
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.39.0"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
